servers = (
  { address = "irc.stealth.net"; chatnet = "IRCnet"; port = "6668"; },
  { address = "irc.efnet.org"; chatnet = "EFNet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  {
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
    autoconnect = "yes";
  },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "gr.irc.gr";
    chatnet = "GRnet";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  },
  {
    address = "localhost";
    chatnet = "bitlbee";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  }
);

chatnets = {
  SILC = { type = "SILC"; };
  freenode = {
    type = "IRC";
    nick = "c00kiemon5ter";
    autosendcmd = "/^msg NickServ IDENTIFY h4x0r1n6;wait 1000";
  };
  IRCnet = { type = "IRC"; };
  EFNet = { type = "IRC"; };
  Undernet = { type = "IRC"; };
  DALnet = { type = "IRC"; };
  QuakeNet = {
    type = "IRC";
    nick = "c00kiemon5ter";
    autosendcmd = "/msg Q@CServe.quakenet.org AUTH c00kiemon5ter h4x0r1n6 ;wait 1000";
  };
  GRnet = { type = "IRC"; };
  bitlbee = {
    type = "IRC";
    autosendcmd = "/msg &bitlbee identify h4x0r1n6";
  };
};

channels = (
  { name = "foss-aueb"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "dietunichtguten"; chatnet = "QuakeNet"; autojoin = "yes"; },
  { name = "thebadasschoobs"; chatnet = "QuakeNet"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUIT";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  L = "LEAVE";
  fortune = "exec -out - fortune -sea|sed 's/\\t/ - /g'";
  futurama = "exec - -o curl -Is slashdot.org | egrep '^X-(F|B|L)' | cut -d - -f 2";
  google = "exec - -o lmgtfy $*";
  pdf = "/say http://docs.google.com/viewer?url=$0";
  urban = "/say http://www.urbandictionary.com/define.php?term=$0";
  nowplaying = "/exec -out - echo -n ♪ `mpc current` && echo -n \" ♪\"";
  mcs = "/msg chanserv ";
  mns = "/msg nickserv ";
  ninfo = "/msg nickserv info $0";
  awayr = "/away Away - c00kiehuntin'";
  busy = "/away Busy - work time is serious work time serious";
  offline = "/away Offline - hidding from mortals, no more wishes for now..";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        otr = { };
      };
    };

    # statusbar to use in inactive split windows

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.

    # topicbar
    "window)inact" = { disabled = "yes"; };
  };
};
settings = {
  core = {
    real_name = "c00kiemon5ter";
    user_name = "c00kiemon5ter";
    nick = "c00kiemon5ter";
    quit_message = "┌∩┐(◣_◢)┌∩┐";
    hostname = "\"\"";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = {
    theme = "c00kiez";
    use_status_window = "no";
    use_msgs_window = "no";
    autocreate_query_level = "MSGS";
    autoclose_windows = "no";
    reuse_unused_windows = "no";
    autolog = "no";
    autocreate_own_query = "yes";
    autocreate_windows = "yes";
    hide_text_style = "no";
    timestamps = "yes";
    show_nickmode_empty = "yes";
    show_quit_once = "yes";
    completion_auto = "yes";
    autoclose_query = "300";
    show_names_on_join = "no";
    beep_msg_level = "MSG HILIGHT";
    beep_when_away = "yes";
    autolog_colors = "yes";
    activity_hide_targets = "&hilight &bitlbee &status";
    hide_server_tags = "yes";
    show_nickmode = "no";
    autolog_path = "~/.pisg/$tag/$0.log";
  };
  "irc/core" = {
    part_message = "segfault! core dumped";
    alternate_nick = "mrJesus";
  };
  "perl/core/scripts" = {
    title_string = "Irssi: $.C";
    neat_maxlength = "12";
    neat_melength = "4";
  };
  "fe-common/irc" = { show_away_once = "yes"; };
};
hilights = (
  { text = "ivan"; nick = "yes"; word = "yes"; },
  { text = "jesus"; nick = "yes"; word = "yes"; },
  { text = "koukos"; nick = "yes"; word = "yes"; },
  { text = "cookie"; nick = "yes"; word = "yes"; },
  { text = "c00kie"; nick = "yes"; word = "yes"; }
);
ignores = (
  {
    mask = "*!*@cslab178.cs.aueb.gr";
    level = "ALL";
    pattern = "(begun|ended|c00kie)";
    regexp = "yes";
    replies = "yes";
    channels = ( "#foss-aueb" );
  }
);
logs = { };
keyboard = ( { key = "^L"; id = "command"; data = "redraw "; } );
windows = {
  1 = { name = "&status"; };
  #  2 = {
  #    items = (
  #      {
  #        type = "CHANNEL";
  #        chat_type = "IRC";
  #        name = "&bitlbee";
  #        tag = "bitlbee";
  #      }
  #    );
  #  };
  2 = { name = "&hilight"; };
  #  3 = {
  #    items = (
  #      {
  #        type = "CHANNEL";
  #        chat_type = "IRC";
  #        name = "#gentoo-el";
  #        tag = "freenode";
  #      }
  #    );
  #  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#foss-aueb";
        tag = "freenode";
      }
    );
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#dietunichtguten";
        tag = "quakenet";
      }
    );
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#thebadasschoobs";
        tag = "quakenet";
      }
    );
  };
};
mainwindows = { 1 = { first_line = "1"; lines = "22"; }; };

