#!/usr/bin/env bash
# c00kiemon5ter (ivan.kanak@gmail.com) ~ under c00kiez License

# the prompt
prompt() {
	[ $? -ne 0 ] && sc="$fgylw" s='!' || sc="$bfggrn" s=' '
	g="$(git symbolic-ref --short HEAD 2>/dev/null)" &&      \
	    g="\[$fgwht\]:\[$fgcyn\]$g\[$bfgylw\]$(git status -s \
	    | awk '!q&&$1=="??"{q="?"} !e&&$1!="??"{e="!"} q&&e{exit} END{printf e q}')"
	PS1="\n\[$bfgcyn\]┐$sc$s\[$fggrn\]\w$g\n\[$bfgcyn\]└\[$sc\]─ \[$normal\]"
	unset g s sc
}

# display a random quote on top of every new shell
wazaaa() {
	local qdb="$HOME/.archquotes" # quotes database
	local arch="Arch" nix="Linux" # the logo
	local say="$(shuf -n1 $qdb)"  # pick a random quote
	local spc="$(( COLUMNS - ${#arch} - ${#nix} ))"
	clear						  # ohai, kthnxbye
	printf "$mkbold$fgwht%s$bfgblu%s$fgwht%${spc}s$normal\n" "$arch" "$nix" "$say"
}

# cd helper
cd() {
	{ [ -z "$1" ] && builtin cd "$HOME"; }           || \
	{ [ -d "$1" ] && builtin cd "$1"; }              || \
	{ [ -f "$1" ] && builtin cd "$(dirname "$1")"; } || \
	builtin cd "$1"
}
# copy and follow
cpf() { cp "$@" && cd "$_"; }
# move and follow
mvf() { mv "$@" && cd "$_"; }
# make dir and follow
mkf() { mkdir -vp "$1" && cd "$_"; }

# funny quotes from bash.org @irc
bashfortune() {
	curl -s http://bash.org/?random1 \
		| grep -oE "<p class=\"quote\">.*</p>.*</p>" \
		| grep -oE "<p class=\"qt.*?</p>" \
		| sed -e 's/<\/p>/\n/g' -e 's/<p class=\"qt\">//g' -e 's/<p class=\"qt\">//g' \
		| perl -ne 'use HTML::Entities;print decode_entities($_),"\n"' \
		| head -1
}

# slow output
slow_output() { while IFS= read -r -N1; do printf "%c" "$REPLY"; sleep ${1:-.02}; done; }

# change terminal title
tname() { printf "%b" "\e]0;${1:-$TERM}\a"; }

# alternative clear
cls() { printf "%b" "\ec"; }

# pastebin
sprunge() {
	curl -sF "sprunge=<${1:--}" 'http://sprunge.us' | tee -a /tmp/saved.urls | xclip && xclip -o
}

# a tree alternative
t() {
	path="$(readlink -m "${1:-$PWD}")"
	[[ -n $1 ]] && shift
	find "$path" "$@" -print | sed "2,\$s;${path%/*}/;;;2,\$s;[^/]*/; |- ;g;s;-  |;   |;g"
}

irc() {
	while true; do notifiii.sh; done
}

ircon() {
	[ -e "/tmp/.stunnel.pid" ] || stunnel "$HOME/.stunnel/stunnel.conf"
	local passwd=
	read -rsp "enter passwd: " passwd
	freenode="$passwd" oftc="$passwd" connect.sh
	unset passwd
	spawnchannels.sh
	irc
}

ircoff() {
	ps -C sh -opid,cmd \
		| awk 'index($3, "connect.sh") || index($3, "notifiii.sh") {print $1}' \
		| xargs kill
}

d() {
	dtach -A ~/.term.sock -r winch bash
}

# vim: nospell
